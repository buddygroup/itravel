/*
 * Created on 13 Aug 2016 ( Time 12:34:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.app.common.dao.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "groups"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="groups")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="GroupsEntity.countAll", query="SELECT COUNT(x) FROM GroupsEntity x" )
} )
public class GroupsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="group_id", nullable=false)
    private Integer    groupId      ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="group_name", nullable=false, length=50)
    private String     groupName    ;

    @Column(name="group_code", length=50)
    private String     groupCode    ;

    @Column(name="group_description", nullable=true, length=100)
    private String     groupDescription ;
    
    @Column(name="group_pics", nullable=true, length=500)
    private String     groupPics ;

    @Temporal(TemporalType.DATE)
    @Column(name="create_date", nullable=false)
    private Date       createDate   ;

    @Column(name="public", nullable=false)
    private Boolean    public_private       ;

	// "adminId" (column "admin_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne(cascade=CascadeType.ALL)
    @JoinColumn(name="admin_id", referencedColumnName="id")
    private UsersEntity users       ;

   

    @OneToMany(mappedBy="groups", targetEntity=GroupContentsEntity.class)
    private List<GroupContentsEntity> listOfGroupContents;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public GroupsEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setGroupId( Integer groupId ) {
        this.groupId = groupId ;
    }
    public Integer getGroupId() {
        return this.groupId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : group_name ( VARCHAR ) 
    public void setGroupName( String groupName ) {
        this.groupName = groupName;
    }
    public String getGroupName() {
        return this.groupName;
    }

    //--- DATABASE MAPPING : group_code ( VARCHAR ) 
    public void setGroupCode( String groupCode ) {
        this.groupCode = groupCode;
    }
    public String getGroupCode() {
        return this.groupCode;
    }

    //--- DATABASE MAPPING : group_description ( VARCHAR ) 
    public void setGroupDescription( String groupDescription ) {
        this.groupDescription = groupDescription;
    }
    public String getGroupDescription() {
        return this.groupDescription;
    }

  //--- DATABASE MAPPING : group_pics ( VARCHAR ) 
    public void setGroupPics( String groupPics ) {
        this.groupPics = groupPics;
    }
    public String getGroupPics() {
        return this.groupPics;
    }
    
    //--- DATABASE MAPPING : create_date ( DATE ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : public ( BIT ) 
    public void setPublic( Boolean public_private ) {
        this.public_private = public_private;
    }
    public Boolean getPublic() {
        return this.public_private;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUsers( UsersEntity users ) {
        this.users = users;
    }
    public UsersEntity getUsers() {
        return this.users;
    }

   

    public void setListOfGroupContents( List<GroupContentsEntity> listOfGroupContents ) {
        this.listOfGroupContents = listOfGroupContents;
    }
    public List<GroupContentsEntity> getListOfGroupContents() {
        return this.listOfGroupContents;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(groupId);
        sb.append("]:"); 
        sb.append(groupName);
        sb.append("|");
        sb.append(groupCode);
        sb.append("|");
        sb.append(groupDescription);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(public_private);
        return sb.toString(); 
    } 

}
