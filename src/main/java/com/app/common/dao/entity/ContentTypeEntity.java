/*
 * Created on 13 Aug 2016 ( Time 12:34:03 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.app.common.dao.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "content_type"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="content_type" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ContentTypeEntity.countAll", query="SELECT COUNT(x) FROM ContentTypeEntity x" )
} )
public class ContentTypeEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="type_id", nullable=false)
    private Integer    typeId       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="content_code", nullable=false, length=50)
    private String     contentCode  ;

    @Column(name="content_type_name", nullable=false, length=50)
    private String     contentTypeName ;

    @Column(name="content_description", nullable=false, length=500)
    private String     contentDescription ;

    @Column(name="content_pics", length=1000)
    private String     contentPics  ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ContentTypeEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setTypeId( Integer typeId ) {
        this.typeId = typeId ;
    }
    public Integer getTypeId() {
        return this.typeId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : content_code ( VARCHAR ) 
    public void setContentCode( String contentCode ) {
        this.contentCode = contentCode;
    }
    public String getContentCode() {
        return this.contentCode;
    }

    //--- DATABASE MAPPING : content_type_name ( VARCHAR ) 
    public void setContentTypeName( String contentTypeName ) {
        this.contentTypeName = contentTypeName;
    }
    public String getContentTypeName() {
        return this.contentTypeName;
    }

    //--- DATABASE MAPPING : content_description ( VARCHAR ) 
    public void setContentDescription( String contentDescription ) {
        this.contentDescription = contentDescription;
    }
    public String getContentDescription() {
        return this.contentDescription;
    }

    //--- DATABASE MAPPING : content_pics ( VARCHAR ) 
    public void setContentPics( String contentPics ) {
        this.contentPics = contentPics;
    }
    public String getContentPics() {
        return this.contentPics;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(typeId);
        sb.append("]:"); 
        sb.append(contentCode);
        sb.append("|");
        sb.append(contentTypeName);
        sb.append("|");
        sb.append(contentDescription);
        sb.append("|");
        sb.append(contentPics);
        return sb.toString(); 
    } 

}
