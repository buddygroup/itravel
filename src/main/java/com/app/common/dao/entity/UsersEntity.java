/*
 * Created on 13 Aug 2016 ( Time 12:34:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.app.common.dao.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "users"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="users")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UsersEntity.countAll", query="SELECT COUNT(x) FROM UsersEntity x" )
} )
public class UsersEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user", nullable=false, length=30)
    private String     user         ;

    @Column(name="email", length=30)
    private String     email        ;

    @Column(name="password", nullable=false, length=100)
    private String     password     ;

    @Temporal(TemporalType.DATE)
    @Column(name="create_date", nullable=false)
    private Date       createDate   ;

    @Column(name="location", nullable=false, length=40)
    private String     location     ;



    

    @OneToMany(mappedBy="users", targetEntity=UserProfileEntity.class)
    private List<UserProfileEntity> listOfUserProfile;

    @OneToMany(mappedBy="users", targetEntity=GroupsEntity.class)
    private List<GroupsEntity> listOfGroups;

    @OneToMany(mappedBy="users", targetEntity=GroupContentsEntity.class)
    private List<GroupContentsEntity> listOfGroupContents;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UsersEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user ( VARCHAR ) 
    public void setUser( String user ) {
        this.user = user;
    }
    public String getUser() {
        return this.user;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : create_date ( DATE ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : location ( VARCHAR ) 
    public void setLocation( String location ) {
        this.location = location;
    }
    public String getLocation() {
        return this.location;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
   

    public void setListOfUserProfile( List<UserProfileEntity> listOfUserProfile ) {
        this.listOfUserProfile = listOfUserProfile;
    }
    public List<UserProfileEntity> getListOfUserProfile() {
        return this.listOfUserProfile;
    }

    public void setListOfGroups( List<GroupsEntity> listOfGroups ) {
        this.listOfGroups = listOfGroups;
    }
    public List<GroupsEntity> getListOfGroups() {
        return this.listOfGroups;
    }

    public void setListOfGroupContents( List<GroupContentsEntity> listOfGroupContents ) {
        this.listOfGroupContents = listOfGroupContents;
    }
    public List<GroupContentsEntity> getListOfGroupContents() {
        return this.listOfGroupContents;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(user);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(location);
        return sb.toString(); 
    } 

}
